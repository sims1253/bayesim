[{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Maximilian Scholz. Author, maintainer. Paul-Christian Bürkner. Author.","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Scholz M, Bürkner P (2025). bayesim: Simulation Framework Bayesian Modeling. R package version 0.34.1.9000.","code":"@Manual{,   title = {bayesim: Simulation Framework for Bayesian Modeling},   author = {Maximilian Scholz and Paul-Christian Bürkner},   year = {2025},   note = {R package version 0.34.1.9000}, }"},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/index.html","id":"bayesim","dir":"","previous_headings":"","what":"Simulation Framework for Bayesian Modeling","title":"Simulation Framework for Bayesian Modeling","text":"simulation framework Bayesian models based brms. main function full_simulation main arguments data_gen_confs, data_gen_fun, fit_confs metrics. Bayesim generate datasets passing data_gen_confs rows data_gen_fun fit model defined fit_confs generated dataset. calculates defined metrics model. , now, done fully crossed fashion.","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/index.html","id":"define-data-simulation","dir":"","previous_headings":"","what":"Define Data Simulation","title":"Simulation Framework for Bayesian Modeling","text":"Data simulation consists two parts. data_gen_fun function data_gen_confs dataframe. Bayesim feed row data_gen_confs data_gen_fun generate individual dataset. strictly necessary columns data_gen_confs : dataset_N, number datasets simulated per configuration. Bayesim parallelize . id, unique identifier string used save results per configuration row. vars_of_interest, want metrics calculated individual parameters. list variable names used data_gen_fun. data_gen_fun output named list contains following parts: dataset, dataframe fed brms::brm testing_data, dataframe used newdata argument certain --sample metrics. data_gen_output, named list contains information want export data generating function. usually include input arguments (see example get easily), references list, contains reference values vars_of_interest variables (, see example easily get ). example presented : ```{r} constant_linpred_dgp <- function(data_N, data_link, data_family, seed = NULL, testing_data = TRUE, vars_of_interest = list(“mu”), mean = 0, …) { arguments <- .list(c(.list(environment()), list(…))) arguments$seed <- NULL (!.null(seed)) { set.seed(seed) } (testing_data) { data_gen_size <- data_N * 2 } else { data_gen_size <- data_N } dataset <- data.frame() mu = rnorm(n = 1, mean = x, sd = 1) y = rnorm(n = data_gen_size, mean = mu, sd = 1) # creates list values vars_of_interest. arguments$references <- lapply( unlist(vars_of_interest), function(x) get(x) ) data_gen_output <- list() # Anything addition function arguments want save # data generation process ie. resampling number # invalid samples. ) data_gen_output <- c(data_gen_output, arguments) (testing_data) { return( list( dataset = list(y = dataset[1:data_N, ]), testing_data = list(y = dataset[(data_N + 1):data_gen_size, ]), data_gen_output = data_gen_output ) ) } else { return( list( dataset = dataset, testing_data = NULL, data_gen_output = data_gen_output ) ) } } ```","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/index.html","id":"define-fit-configurations","dir":"","previous_headings":"","what":"Define Fit Configurations","title":"Simulation Framework for Bayesian Modeling","text":"Fit configurations currently dataframes following columns: fit_family, see brms_family_lookup supported families. fit_link, see link_lookup supported families. formula, string allows conversion via brms::brmsformula prior, gets passed brms::brm directly.","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/index.html","id":"define-metrics","dir":"","previous_headings":"","what":"Define Metrics","title":"Simulation Framework for Bayesian Modeling","text":"Metrics defined via list string identifiers. supported metrics :","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/index.html","id":"variable-summaries","dir":"","previous_headings":"Define Metrics","what":"Variable summaries","title":"Simulation Framework for Bayesian Modeling","text":"\"v_mean\" \"v_sd\" \"v_median\" \"v_mad\" \"v_pos_prob\" \"v_quantiles\" \"v_bias\" \"v_rmse\" \"v_mae\" \"v_mse\" \"v_true_percentile\"","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/index.html","id":"global-mcmc-diagnostics","dir":"","previous_headings":"Define Metrics","what":"Global MCMC Diagnostics","title":"Simulation Framework for Bayesian Modeling","text":"\"divergent_transitions_rel\" \"divergent_transitions_abs\" \"rstar\" \"bad_pareto_ks\" \"pareto_k_values\" \"time_per_sample\"","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/index.html","id":"variable-mcmc-diagnostics","dir":"","previous_headings":"Define Metrics","what":"Variable MCMC Diagnostics","title":"Simulation Framework for Bayesian Modeling","text":"\"rhat\" \"ess_bulk\" \"ess_tail\"","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/index.html","id":"predictive-metrics","dir":"","previous_headings":"Define Metrics","what":"Predictive Metrics","title":"Simulation Framework for Bayesian Modeling","text":"\"elpd_loo\" \"elpd_loo_pointwise\" \"elpd_loo_pointwise_summary\" \"elpd_test\" \"elpd_test_pointwise_summary\" \"rmse_loo\" \"rmse_loo_pointwise\" \"rmse_loo_pointwise_summary\" \"rmse_test\" \"rmse_test_pointwise_summary\" \"r2_loo\" \"r2_loo_pointwise\" \"r2_loo_pointwise_summary\" \"r2_test\" \"r2_test_pointwise_summary\"","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/index.html","id":"posterior-sample-based-metrics","dir":"","previous_headings":"Define Metrics","what":"Posterior sample based metrics","title":"Simulation Framework for Bayesian Modeling","text":"\"log_lik_pointwise\" \"log_lik_summary\" \"ppred_summary_y_scaled\" \"ppred_pointwise\" \"residuals\" \"posterior_linpred\" \"posterior_linpred_transformed\"","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/index.html","id":"observations","dir":"","previous_headings":"Define Metrics","what":"Observations","title":"Simulation Framework for Bayesian Modeling","text":"\"y_pointwise\" \"y_pointwise_z_scaled\" \"y_summaries\"","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/index.html","id":"data","dir":"","previous_headings":"Define Metrics","what":"Data","title":"Simulation Framework for Bayesian Modeling","text":"\"data_gen\"","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/index.html","id":"fits","dir":"","previous_headings":"Define Metrics","what":"Fits","title":"Simulation Framework for Bayesian Modeling","text":"\"fit_gen\" see metric_lookup currently implemented metrics.","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/index.html","id":"additional-arguments","dir":"","previous_headings":"","what":"Additional Arguments","title":"Simulation Framework for Bayesian Modeling","text":"seed, sets seed result rest simulation happening deterministically, conditional seed. Allows reproduction individual results entire simulation run later .","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/index.html","id":"output","dir":"","previous_headings":"Additional Arguments","what":"Output","title":"Simulation Framework for Bayesian Modeling","text":"result_path = \"./\", path result .RDS files saved. debug = FALSE, TRUE save intermediate results .RDS files result_path directory support debugging.","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/index.html","id":"stan-options","dir":"","previous_headings":"Additional Arguments","what":"Stan Options","title":"Simulation Framework for Bayesian Modeling","text":"stan_pars named list contains following arguments: warmup, directly passed brms::brm iter, directly passed brms::brm chains, directly passed brms::brm init, directly passed brms::brm backend = \"rstan\", directly passed brms::brm recommend rstan due instabilities cmdstanr clusters. cmdstan_path, useful working cmdstan computing cluster cmdstan might installed default location. Use path main directory, eg \"~/.cmdstan/cmdstan-2.29.2\". cmdstan_write_path, directory cmdstan write compiled model files . temporary directory might get cleaned simulation run.","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/index.html","id":"using-multiple-cores","dir":"","previous_headings":"Additional Arguments","what":"Using multiple Cores","title":"Simulation Framework for Bayesian Modeling","text":"ncores_simulation = 1, set 1, Bayesim parallelize across datasets within row data_gen_confs using specified number processes. cluster_type = \"PSOCK\", Defines type cluster used parallel package. Windows requires PSOCK however ’FORK` can save quite time due repeated cluster setup times.","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/index.html","id":"related-work","dir":"","previous_headings":"","what":"Related Work","title":"Simulation Framework for Bayesian Modeling","text":"Bayesim used following projects: Prediction can safely used proxy explanation causally consistent Bayesian generalized linear models","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/brms_full_ppred.html","id":null,"dir":"Reference","previous_headings":"","what":"Full forward sampling of a the response of brms fit, including multivariate models. — brms_full_ppred","title":"Full forward sampling of a the response of brms fit, including multivariate models. — brms_full_ppred","text":"Full forward sampling response brms fit, including multivariate models.","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/brms_full_ppred.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Full forward sampling of a the response of brms fit, including multivariate models. — brms_full_ppred","text":"","code":"brms_full_ppred(fit, newdata = NULL, draws = NULL, validate_all = FALSE)"},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/brms_full_ppred.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Full forward sampling of a the response of brms fit, including multivariate models. — brms_full_ppred","text":"function taken SBC package (https://github.com/hyunjimoon/SBC) ensure stability, exported SBC.","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/brms_full_ppred.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Full forward sampling of a the response of brms fit, including multivariate models. — brms_full_ppred","text":"fit object class brmsfit newdata optional data.frame evaluate predictions. NULL (default), original data model used. draws integer vector specifying posterior draws used. NULL (default), draws used. validate_all TRUE, validation input data done iterations, otherwise ","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/brms_full_ppred.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Full forward sampling of a the response of brms fit, including multivariate models. — brms_full_ppred","text":"list data.frames containing draws.","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/brms_full_ppred.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Full forward sampling of a the response of brms fit, including multivariate models. — brms_full_ppred","text":"","code":"# Pending"},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/brms_response_sequence.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine the response sequence of brms model — brms_response_sequence","title":"Determine the response sequence of brms model — brms_response_sequence","text":"Determine response sequence brms model","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/brms_response_sequence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine the response sequence of brms model — brms_response_sequence","text":"","code":"brms_response_sequence(x)"},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/brms_response_sequence.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Determine the response sequence of brms model — brms_response_sequence","text":"function taken SBC package (https://github.com/hyunjimoon/SBC) ensure stability, exported SBC.","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/build_prefit_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare a list of brmsfit objects to update during repeated simulations — build_prefit_list","title":"Prepare a list of brmsfit objects to update during repeated simulations — build_prefit_list","text":"mainly used save constant recompilation times.","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/build_prefit_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare a list of brmsfit objects to update during repeated simulations — build_prefit_list","text":"","code":"build_prefit_list(fit_configuration, stan_pars)"},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/build_prefit_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare a list of brmsfit objects to update during repeated simulations — build_prefit_list","text":"fit_configuration named list currently holds family, link prior. stan_pars named list contains backend field.","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/build_prefit_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare a list of brmsfit objects to update during repeated simulations — build_prefit_list","text":"list ","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/cluster_setup.html","id":null,"dir":"Reference","previous_headings":"","what":"Convenience Function to set up a cluster used for multiprocessing — cluster_setup","title":"Convenience Function to set up a cluster used for multiprocessing — cluster_setup","text":"Convenience Function set cluster used multiprocessing","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/cluster_setup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convenience Function to set up a cluster used for multiprocessing — cluster_setup","text":"","code":"cluster_setup(ncores = 2, cluster_type = \"FORK\", debug = FALSE, outfile = NULL)"},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/cluster_setup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convenience Function to set up a cluster used for multiprocessing — cluster_setup","text":"ncores Numbers processes cluster use cluster_type \"FORK\" \"PSOCK\". Fork faster work Windows debug TRUE cluster log written file outfile Path cluster log written debug mode.","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/custom_loo_object.html","id":null,"dir":"Reference","previous_headings":"","what":"Builds a loo object that contains any pointwise criterion, acting as elpd for compatibility. — custom_loo_object","title":"Builds a loo object that contains any pointwise criterion, acting as elpd for compatibility. — custom_loo_object","text":"LOO currently hardcoded expectations elpd part loo objects use loo objects, disguise criterions elpd.","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/custom_loo_object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Builds a loo object that contains any pointwise criterion, acting as elpd for compatibility. — custom_loo_object","text":"","code":"custom_loo_object(pointwise_criterion, psis_object = NULL)"},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/custom_loo_object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Builds a loo object that contains any pointwise criterion, acting as elpd for compatibility. — custom_loo_object","text":"pointwise_criterion vector criterion values observation psis_object brms:::.psis object psis diagnostics","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/custom_loo_object.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Builds a loo object that contains any pointwise criterion, acting as elpd for compatibility. — custom_loo_object","text":"loo object, containing criterion, disguised elpd","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/dataset_conf_sim.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — dataset_conf_sim","title":"Title — dataset_conf_sim","text":"Title","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/dataset_conf_sim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — dataset_conf_sim","text":"","code":"dataset_conf_sim(   data_gen_conf,   fit_confs,   prefits,   seed = NULL,   result_path = NULL,   stan_pars,   ncores,   cluster_type,   debug,   global_seed,   ... )"},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/dataset_conf_sim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — dataset_conf_sim","text":"debug","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/dataset_sim.html","id":null,"dir":"Reference","previous_headings":"","what":"Run simulation for a single dataset configuration — dataset_sim","title":"Run simulation for a single dataset configuration — dataset_sim","text":"function generates single dataset fits specified models , calculating metrics model fit.","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/dataset_sim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run simulation for a single dataset configuration — dataset_sim","text":"","code":"dataset_sim(   data_gen_conf,   fit_confs,   prefits,   stan_pars,   seed,   debug,   result_path,   ... )"},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/dataset_sim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run simulation for a single dataset configuration — dataset_sim","text":"data_gen_conf list containing data generation configuration parameters fit_confs data.frame containing model fitting configurations prefits list precompiled brms model objects stan_pars list containing Stan/brms fitting parameters seed Random seed reproducible data generation model fitting debug Logical; TRUE, saves intermediate results debugging result_path Path debug files saved ... Additional arguments passed metric calculation functions","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/dataset_sim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run simulation for a single dataset configuration — dataset_sim","text":"tibble containing simulation results models","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/dataset_sim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run simulation for a single dataset configuration — dataset_sim","text":"","code":"if (FALSE) { # \\dontrun{ # This function is typically called internally by dataset_conf_sim() # See full_simulation() examples for complete usage } # }"},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/elpd_loo_handler.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — elpd_loo_handler","title":"Title — elpd_loo_handler","text":"Title","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/elpd_loo_handler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — elpd_loo_handler","text":"","code":"elpd_loo_handler(fit)"},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/elpd_loo_handler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — elpd_loo_handler","text":"fit","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/elpd_pointwise_summaries.html","id":null,"dir":"Reference","previous_headings":"","what":"Pointwise elps summaries — elpd_pointwise_summaries","title":"Pointwise elps summaries — elpd_pointwise_summaries","text":"Convenience function collect quantiles summaries pointwise elpd estimates instead just main estimates. returned summaries sample size independent.","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/elpd_pointwise_summaries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pointwise elps summaries — elpd_pointwise_summaries","text":"","code":"elpd_pointwise_summaries(fit, quantiles, newdata = NULL)"},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/elpd_pointwise_summaries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pointwise elps summaries — elpd_pointwise_summaries","text":"fit brmsfit object. quantiles vector quantiles interest. newdata supplied, returns summaries elpd_test() otherwise, returns brms::elpd() summaries default.","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/elpd_pointwise_summaries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pointwise elps summaries — elpd_pointwise_summaries","text":"named list summaries.","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/elpd_pointwise_summaries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pointwise elps summaries — elpd_pointwise_summaries","text":"","code":"fit <- brms::brm(y ~ 1, data = list(rnorm(1000))) #> Error in validate_data(data, bterms = bterms, data2 = data2, knots = knots,     drop_unused_levels = drop_unused_levels, data_name = substitute_name(data)): The following variables can neither be found in 'data' nor in 'data2': #> 'y' elpd_pointwise_summaries(fit, seq(0.1, 0.9, length.out = 9)) #> Error: object 'fit' not found elpd_pointwise_summaries(fit, seq(0.1, 0.9, length.out = 9), rnorm(1000)) #> Error: object 'fit' not found"},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/elpd_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — elpd_test","title":"Title — elpd_test","text":"Title","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/elpd_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — elpd_test","text":"","code":"elpd_test(fit, newdata, return_object = FALSE)"},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/elpd_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — elpd_test","text":"newdata","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/fit_conf_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate lookup keys for fit configurations to retrieve prefit objects matching said config. — fit_conf_key","title":"Generate lookup keys for fit configurations to retrieve prefit objects matching said config. — fit_conf_key","text":"Generate lookup keys fit configurations retrieve prefit objects matching said config.","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/fit_conf_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate lookup keys for fit configurations to retrieve prefit objects matching said config. — fit_conf_key","text":"","code":"fit_conf_key(fit_conf)"},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/fit_conf_key.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate lookup keys for fit configurations to retrieve prefit objects matching said config. — fit_conf_key","text":"fit_conf","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/fit_conf_key.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate lookup keys for fit configurations to retrieve prefit objects matching said config. — fit_conf_key","text":"hash generated fit configuration","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/fit_conf_key.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate lookup keys for fit configurations to retrieve prefit objects matching said config. — fit_conf_key","text":"","code":"fit_conf_key(   list(     fit_family = \"gaussian\",     fit_link = \"identity\",     prior = list(c(brms::set_prior(\"\", class = \"Intercept\")))   ) ) #> [1] \"45a2f18e5dd478acd6feea29f6d3a3b6\""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/fit_sim.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a single model in a simulation study — fit_sim","title":"Fit a single model in a simulation study — fit_sim","text":"function fits Bayesian model using precompiled brms model object calculates specified metrics fitted model.","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/fit_sim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a single model in a simulation study — fit_sim","text":"","code":"fit_sim(   prefit,   dataset,   data_gen_output,   fit_conf,   seed,   debug,   result_path,   stan_pars,   ... )"},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/fit_sim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a single model in a simulation study — fit_sim","text":"prefit precompiled brms model object get_prefit dataset data.frame containing data fit model data_gen_output Output data generation function containing true parameters fit_conf list data.frame row containing model configuration (formula, family, etc.) seed Random seed reproducible model fitting debug Logical; TRUE, saves intermediate results debugging result_path Path debug files saved stan_pars List Stan/brms parameters (chains, iter, warmup, etc.) ... Additional arguments passed metric calculation functions","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/fit_sim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a single model in a simulation study — fit_sim","text":"tibble containing calculated metrics fitted model","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/fit_sim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit a single model in a simulation study — fit_sim","text":"","code":"if (FALSE) { # \\dontrun{ # This function is typically called internally by full_simulation() # See full_simulation() examples for complete usage } # }"},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/forward_sampling.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate a new dataset using forward sampling. — forward_sampling","title":"Simulate a new dataset using forward sampling. — forward_sampling","text":"Simulate new dataset using forward sampling.","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/forward_sampling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate a new dataset using forward sampling. — forward_sampling","text":"","code":"forward_sampling(fit, i, n, ...)"},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/forward_sampling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate a new dataset using forward sampling. — forward_sampling","text":"fit object class brmsfit list brmsfit objects. index single posterior draw simulate dataset . index passed posterior_predict()'s \"draw_ids\" argument. ... Potential additional arguments. newdata dataframe passed posterior predict.","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/forward_sampling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate a new dataset using forward sampling. — forward_sampling","text":"data.frame containing n observations variable fit.","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/full_simulation.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — full_simulation","title":"Title — full_simulation","text":"Title","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/full_simulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — full_simulation","text":"","code":"full_simulation(   data_gen_confs,   fit_confs,   ncores_simulation = 1,   cluster_type = \"PSOCK\",   stan_pars,   seed = NULL,   result_path = NULL,   debug = FALSE,   ... )"},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/full_simulation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — full_simulation","text":"debug","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/gamma_discrepancy.html","id":null,"dir":"Reference","previous_headings":"","what":"Quantifies deviation from uniformity by the likelihood of observing the most extreme point on the empirical CDF of the given rank distribution according to 1 (equation 7). — gamma_discrepancy","title":"Quantifies deviation from uniformity by the likelihood of observing the most extreme point on the empirical CDF of the given rank distribution according to 1 (equation 7). — gamma_discrepancy","text":"1 Modrák, Martin, Angie H. Moon, Shinyoung Kim, Paul Bürkner, Niko Huurre, Kateřina Faltejsková, Andrew Gelman, Aki Vehtari. “Simulation-Based Calibration Checking Bayesian Computation: Choice Test Quantities Shapes Sensitivity.” arXiv, June 15, 2023. https://doi.org/10.48550/arXiv.2211.02383.","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/gamma_discrepancy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quantifies deviation from uniformity by the likelihood of observing the most extreme point on the empirical CDF of the given rank distribution according to 1 (equation 7). — gamma_discrepancy","text":"","code":"gamma_discrepancy(ranks, post_warmup_draws, log = FALSE)"},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/gamma_discrepancy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quantifies deviation from uniformity by the likelihood of observing the most extreme point on the empirical CDF of the given rank distribution according to 1 (equation 7). — gamma_discrepancy","text":"ranks Rank distribution post_warmup_draws Number posterior draws used calculate rank distribution. log True result log scale.","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/gamma_discrepancy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quantifies deviation from uniformity by the likelihood of observing the most extreme point on the empirical CDF of the given rank distribution according to 1 (equation 7). — gamma_discrepancy","text":"Measure quantifying deviation uniformity. value can compared distribution gamma expected uniformity calculated validation.gamma_null_distribution.","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/get_prefit.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — get_prefit","title":"Title — get_prefit","text":"Title","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/get_prefit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — get_prefit","text":"","code":"get_prefit(fit_conf, stan_pars)"},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/get_prefit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — get_prefit","text":"family_list","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/ifs_SBC.html","id":null,"dir":"Reference","previous_headings":"","what":"Full inverse forward sampling supported SBC — ifs_SBC","title":"Full inverse forward sampling supported SBC — ifs_SBC","text":"Full inverse forward sampling supported SBC","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/ifs_SBC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Full inverse forward sampling supported SBC — ifs_SBC","text":"","code":"ifs_SBC(   fit,   n_sims,   ppred_data_gen,   precon_sample = NULL,   lb = NULL,   ub = NULL,   truncate = FALSE,   post_warmup_samples = 1000,   ... )"},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/ifs_SBC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Full inverse forward sampling supported SBC — ifs_SBC","text":"fit brmsfit object used generate SBC datasets fit SBC models n_sims Number SBC simulations/datasets. ppred_data_gen Function generates data newdata argument posterior_predict generate SBC datasets. precon_sample dataset used precondition fit. lb Lower bound outcome. used resample. ub Upper bound outcome. used resample. truncate TRUE, truncate outcome values, FALSE, resample instead. post_warmup_samples passed sbc model updates used make sure resampling uses valid samples. Increase case numerical instability. ... parameters. Currently passed ppred_data_gen.","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/loo_compare_handler.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — loo_compare_handler","title":"Title — loo_compare_handler","text":"Title","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/loo_compare_handler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — loo_compare_handler","text":"","code":"loo_compare_handler(loo_object_matrix, predictive_metrics)"},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/loo_compare_handler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — loo_compare_handler","text":"predictive_metrics","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/metric_list_handler.html","id":null,"dir":"Reference","previous_headings":"","what":"Collect multiple metrics at once — metric_list_handler","title":"Collect multiple metrics at once — metric_list_handler","text":"convenience function collects given metrics . can save time compared manually calling metric functions individually, variables can reused instead calculated multiple times.","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/metric_list_handler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collect multiple metrics at once — metric_list_handler","text":"","code":"metric_list_handler(fit, metrics, data_gen_output, fit_conf, ...)"},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/metric_list_handler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collect multiple metrics at once — metric_list_handler","text":"fit brmsfit object. metrics vector metric identifiers. See details supported identifiers.","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/metric_list_handler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collect multiple metrics at once — metric_list_handler","text":"named list containing requested metrics' results.","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/metric_list_handler.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Collect multiple metrics at once — metric_list_handler","text":"Currently, following identifiers supported. See linked functions required additional arguments: \"bias\": posterior_bias() \"divergents\": divergents() \"ess\": ess() \"elpd_loo\": elpd_loo() \"elpd_newdata\": elpd_newdata() \"epred\": epred() \"mae_s\": \"p_mean\": p_mean() \"p_sd\": p_sd() \"pareto_k\": \"pos_prob\": \"ppred\": \"pq\": \"q_true\": \"r2_loo\": \"r2_newdata\": \"residuals\": \"rhat\": \"rmse_loo\": \"rmse_newdata\": \"rmse_s\": \"rstar\": \"time_sampling\": \"time_total\": \"time_warmup\": \"y\": Note,identifiers supported input class.","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/metric_lookup.html","id":null,"dir":"Reference","previous_headings":"","what":"Access metrics with string identifiers — metric_lookup","title":"Access metrics with string identifiers — metric_lookup","text":"function mostly helper function maps identifier strings metrics convenient use contexts.","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/metric_lookup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access metrics with string identifiers — metric_lookup","text":"","code":"metric_lookup(   metric,   fit = NULL,   draws = NULL,   testing_data = NULL,   vars_of_interest = NULL,   references = NULL,   threshold = 0.7,   psis_object = NULL,   ppred = NULL,   quantiles = NULL,   data_gen_output = NULL,   fit_conf = NULL,   ... )"},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/metric_lookup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access metrics with string identifiers — metric_lookup","text":"metric string identifies supported metric","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/metric_lookup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access metrics with string identifiers — metric_lookup","text":"function corresponding identifier string.","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/prior_lookup.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — prior_lookup","title":"Title — prior_lookup","text":"Title","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/prior_lookup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — prior_lookup","text":"","code":"prior_lookup(family)"},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/prior_lookup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — prior_lookup","text":"family","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/r2.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — r2","title":"Title — r2","text":"Title","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/r2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — r2","text":"","code":"r2(y, yrep, weights = NULL)"},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/r2_loo.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate PSIS-loo R² for a given brms fit — r2_loo","title":"Calculate PSIS-loo R² for a given brms fit — r2_loo","text":"Calculate PSIS-loo R² given brms fit","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/r2_loo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate PSIS-loo R² for a given brms fit — r2_loo","text":"","code":"r2_loo(fit, psis_object = NULL, yrep = NULL, return_object = FALSE, ...)"},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/r2_loo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate PSIS-loo R² for a given brms fit — r2_loo","text":"fit brms fit calculate rmse ...","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/r2_loo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate PSIS-loo R² for a given brms fit — r2_loo","text":"custom_loo_object object R² acting elpd.","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/r2_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — r2_test","title":"Title — r2_test","text":"Title","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/r2_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — r2_test","text":"","code":"r2_test(fit, newdata, return_object = FALSE)"},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/r2_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — r2_test","text":"newdata","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/reproduce_result.html","id":null,"dir":"Reference","previous_headings":"","what":"This method will reproduce the exact dataset and fit corresponding to the supplied result dataframe row. — reproduce_result","title":"This method will reproduce the exact dataset and fit corresponding to the supplied result dataframe row. — reproduce_result","text":"code function written seeds set right time following code setting seed replicates exactly simulation.","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/reproduce_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This method will reproduce the exact dataset and fit corresponding to the supplied result dataframe row. — reproduce_result","text":"","code":"reproduce_result(result)"},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/reproduce_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This method will reproduce the exact dataset and fit corresponding to the supplied result dataframe row. — reproduce_result","text":"result","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/rmse.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the root-mean-squared-error for given y and yrep. — rmse","title":"Calculate the root-mean-squared-error for given y and yrep. — rmse","text":"psis-weights supplied, corresponding psis-rmse returned.","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/rmse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the root-mean-squared-error for given y and yrep. — rmse","text":"","code":"rmse(y, yrep, weights = NULL)"},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/rmse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the root-mean-squared-error for given y and yrep. — rmse","text":"y Vector observed values yrep Vector predicted Values weights PSIS weights","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/rmse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the root-mean-squared-error for given y and yrep. — rmse","text":"rmse given y yrep vectors","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/rmse_loo.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate PSIS-loo rmse for a given brms fit — rmse_loo","title":"Calculate PSIS-loo rmse for a given brms fit — rmse_loo","text":"Calculate PSIS-loo rmse given brms fit","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/rmse_loo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate PSIS-loo rmse for a given brms fit — rmse_loo","text":"","code":"rmse_loo(fit, psis_object = NULL, return_object = FALSE, yrep = NULL, ...)"},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/rmse_loo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate PSIS-loo rmse for a given brms fit — rmse_loo","text":"psis_object  ... Additional arguments passed update() case reloo","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/rmse_loo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate PSIS-loo rmse for a given brms fit — rmse_loo","text":"custom_loo_object object rmse acting elpd.","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/rmse_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — rmse_test","title":"Title — rmse_test","text":"Title","code":""},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/rmse_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — rmse_test","text":"","code":"rmse_test(fit, newdata, return_object = FALSE)"},{"path":"https://sims1253.github.io/bayesim/branch/sims/dev/reference/rmse_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — rmse_test","text":"yrep","code":""}]
